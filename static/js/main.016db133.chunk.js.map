{"version":3,"sources":["components/TodoForm/index.jsx","components/TimeMessage/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/App/index.jsx","index.jsx"],"names":["TodoForm","props","state","name","description","color","finish","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","addTodoListItem","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","as","rows","Row","column","lg","Col","Select","Button","variant","React","Component","TimeMessage","warning","danger","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","xmlns","width","height","fill","viewBox","d","TodoListItem","identifier","removeTodoListItem","Accordion","Item","eventKey","style","border","Header","Body","onClick","TodoList","todos","list","map","el","id","emptyList","length","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","bool","func","App","date","Date","timer","setInterval","newTodos","slice","forEach","todo","currentMinutes","getHours","getMinutes","todoMinutes","index","findIndex","clearInterval","parametrs","push","recivedId","splice","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016db133.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, Button, Row, Col,\n} from 'react-bootstrap';\n\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      color: 'dark',\n      finish: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { addTodoListItem } = this.props;\n    const {\n      name, description, color, finish,\n    } = this.state;\n\n    addTodoListItem({\n      name, description, color, finish,\n    });\n\n    this.setState({\n      name: '',\n      description: '',\n      finish: '',\n      color: 'dark',\n    });\n  }\n\n  render() {\n    const {\n      name, description, color, finish,\n    } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"What needs to be done?\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Optional todo description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Row className=\"mb-3\">\n          <Form.Label column lg={1}>Color:</Form.Label>\n          <Col>\n            <Form.Select className=\"w-auto\" name=\"color\" value={color} onChange={this.handleChange}>\n              <option value=\"dark\">Dark</option>\n              <option value=\"secondary\">Gray</option>\n              <option value=\"primary\">Blue</option>\n              <option value=\"success\">Green</option>\n              <option value=\"danger\">Red</option>\n            </Form.Select>\n          </Col>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Row>\n            <Form.Label column lg={1}>Finish in:</Form.Label>\n            <Col>\n              <Form.Control\n                className=\"w-auto\"\n                type=\"time\"\n                name=\"finish\"\n                value={finish}\n                onChange={this.handleChange}\n                required\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport './TimeMessage.css';\n\nexport default function TimeMessage(props) {\n  const { warning, danger } = props;\n\n  if (danger) {\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 250 }}\n        overlay={<Tooltip>Time&apos;s up</Tooltip>}\n      >\n        <svg className=\"me-2 text-danger time-message\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\" />\n        </svg>\n      </OverlayTrigger>\n    );\n  }\n\n  if (warning) {\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 250 }}\n        overlay={<Tooltip>Less than 5 minutes left</Tooltip>}\n      >\n        <svg className=\"me-2 text-warning time-message\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\" />\n        </svg>\n      </OverlayTrigger>\n    );\n  }\n\n  return null;\n}\n\nTimeMessage.propTypes = {\n  warning: PropTypes.bool.isRequired,\n  danger: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Accordion } from 'react-bootstrap';\nimport TimeMessage from '../TimeMessage';\nimport './TodoListItem.css';\n\nexport default function TodoListItem(props) {\n  const {\n    name,\n    description,\n    color,\n    finish,\n    identifier,\n    removeTodoListItem,\n    warning,\n    danger,\n  } = props;\n\n  return (\n    <Accordion.Item\n      eventKey={identifier}\n      className={`mb-2 accordion-${color}`}\n      style={{ border: `1px solid var(--bs-${color})` }}\n    >\n      <Accordion.Header>\n        <span className=\"w-100\">{name}</span>\n        <TimeMessage warning={warning} danger={danger} />\n      </Accordion.Header>\n\n      <Accordion.Body className=\"d-flex flex-column align-items-start\">\n        <p>{description || 'This todo has not description'}</p>\n        <p>\n          Finish in:\n          {` ${finish}`}\n        </p>\n        <Button variant={`outline-${color}`} onClick={() => removeTodoListItem(identifier)}>\n          Done\n        </Button>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nTodoListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  finish: PropTypes.string.isRequired,\n  warning: PropTypes.bool.isRequired,\n  danger: PropTypes.bool.isRequired,\n  identifier: PropTypes.number.isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\nimport TodoListItem from '../TodoListItem';\n\nexport default function TodoList(props) {\n  const { todos, removeTodoListItem } = props;\n\n  const list = (\n    <Accordion>\n      {todos.map((el) => (\n        <TodoListItem\n          name={el.name}\n          description={el.description}\n          color={el.color}\n          finish={el.finish}\n          warning={el.warning}\n          danger={el.danger}\n          key={el.id}\n          identifier={el.id}\n          removeTodoListItem={removeTodoListItem}\n        />\n      ))}\n    </Accordion>\n  );\n\n  const emptyList = <div>Nothing to do</div>;\n\n  return todos.length ? list : emptyList;\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    finish: PropTypes.string.isRequired,\n    warning: PropTypes.bool.isRequired,\n    danger: PropTypes.bool.isRequired,\n  })).isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      id: 0,\n      date: new Date(),\n    };\n\n    this.addTodoListItem = this.addTodoListItem.bind(this);\n    this.removeTodoListItem = this.removeTodoListItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      const { date, todos } = this.state;\n      const newTodos = todos.slice();\n\n      todos.forEach((todo) => {\n        const currentMinutes = date.getHours() * 60 + date.getMinutes();\n        const todoMinutes = +todo.finish.slice(0, 2) * 60 + +todo.finish.slice(3, 5);\n        const index = todos.findIndex((el) => el.id === todo.id);\n        if (todoMinutes - currentMinutes < 5) newTodos[index].warning = true;\n        if (todoMinutes - currentMinutes < 0) newTodos[index].danger = true;\n      });\n\n      this.setState({\n        date: new Date(),\n        todos: newTodos,\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  addTodoListItem(parametrs) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      newTodos.push({\n        id: state.id,\n        name: parametrs.name,\n        description: parametrs.description,\n        color: parametrs.color,\n        finish: parametrs.finish,\n        warning: false,\n        danger: false,\n      });\n      return {\n        todos: newTodos,\n        id: state.id + 1,\n      };\n    });\n  }\n\n  removeTodoListItem(recivedId) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      const index = newTodos.findIndex((el) => el.id === recivedId);\n      newTodos.splice(index, 1);\n      return { todos: newTodos };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <Container className=\"bg-light p-4 my-5\">\n        <TodoForm addTodoListItem={this.addTodoListItem} />\n        <hr className=\"my-3\" />\n        <TodoList todos={todos} removeTodoListItem={this.removeTodoListItem} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}