{"version":3,"sources":["components/TodoForm/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/App/index.jsx","index.jsx"],"names":["TodoForm","props","state","name","description","color","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","addTodoListItem","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","as","rows","Row","column","lg","Col","Select","Button","variant","React","Component","TodoListItem","id","removeTodoListItem","Accordion","Item","eventKey","style","border","Header","Body","onClick","TodoList","todos","list","map","el","emptyList","length","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","func","App","parametrs","newTodos","slice","push","recivedId","filter","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6d4f9e4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, Button, Row, Col,\n} from 'react-bootstrap';\n\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      color: 'dark',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { addTodoListItem } = this.props;\n    const {\n      name, description, color,\n    } = this.state;\n\n    addTodoListItem({\n      name, description, color,\n    });\n\n    this.setState({\n      name: '',\n      description: '',\n      color: 'dark',\n    });\n  }\n\n  render() {\n    const {\n      name, description, color,\n    } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"What needs to be done?\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Optional todo description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Row className=\"mb-3\">\n          <Form.Label column lg={1}>Color:</Form.Label>\n          <Col>\n            <Form.Select className=\"w-auto\" name=\"color\" value={color} onChange={this.handleChange}>\n              <option value=\"dark\">Dark</option>\n              <option value=\"secondary\">Gray</option>\n              <option value=\"primary\">Blue</option>\n              <option value=\"success\">Green</option>\n              <option value=\"danger\">Red</option>\n            </Form.Select>\n          </Col>\n        </Row>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Accordion } from 'react-bootstrap';\nimport './TodoListItem.css';\n\nexport default function TodoListItem(props) {\n  const {\n    name,\n    description,\n    color,\n    id,\n    removeTodoListItem,\n  } = props;\n\n  return (\n    <Accordion.Item\n      eventKey={id}\n      className={`mb-2 accordion-${color}`}\n      style={{ border: `1px solid var(--bs-${color})` }}\n    >\n      <Accordion.Header>\n        <span className=\"w-100\">{name}</span>\n      </Accordion.Header>\n\n      <Accordion.Body className=\"d-flex flex-column align-items-start\">\n        <p>{description || 'This todo has not description'}</p>\n        <Button variant={`outline-${color}`} onClick={() => removeTodoListItem(id)}>\n          Done\n        </Button>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nTodoListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\nimport TodoListItem from '../TodoListItem';\n\nexport default function TodoList(props) {\n  const { todos, removeTodoListItem } = props;\n\n  const list = (\n    <Accordion>\n      {todos.map((el) => (\n        <TodoListItem\n          name={el.name}\n          description={el.description}\n          color={el.color}\n          key={el.id}\n          id={el.id}\n          removeTodoListItem={removeTodoListItem}\n        />\n      ))}\n    </Accordion>\n  );\n\n  const emptyList = <div>Nothing to do</div>;\n\n  return todos.length ? list : emptyList;\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      id: 0,\n    };\n\n    this.addTodoListItem = this.addTodoListItem.bind(this);\n    this.removeTodoListItem = this.removeTodoListItem.bind(this);\n  }\n\n  addTodoListItem(parametrs) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      newTodos.push({ ...parametrs, id: state.id });\n      return {\n        todos: newTodos,\n        id: state.id + 1,\n      };\n    });\n  }\n\n  removeTodoListItem(recivedId) {\n    this.setState((state) => ({ todos: state.todos.filter((el) => el.id !== recivedId) }));\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <Container className=\"bg-light p-4 my-5\">\n        <TodoForm addTodoListItem={this.addTodoListItem} />\n        <hr className=\"my-3\" />\n        <TodoList todos={todos} removeTodoListItem={this.removeTodoListItem} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}