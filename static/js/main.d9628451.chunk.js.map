{"version":3,"sources":["components/TodoForm/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/App/index.jsx","index.jsx"],"names":["TodoForm","props","state","name","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","addTodoListItem","Form","className","onSubmit","Control","type","placeholder","onChange","Button","variant","React","Component","TodoListItem","identifier","removeTodoListItem","ListGroup","Item","onClick","TodoList","todos","length","map","el","id","App","recivedName","newTodos","slice","push","recivedId","index","findIndex","splice","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAIqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAGR,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,gDAUnB,SAAaE,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOP,KAAOI,EAAEG,OAAOC,U,0BAG5C,SAAaJ,GACXA,EAAEK,kBAGFC,EAF4BL,KAAKP,MAAzBY,iBACSL,KAAKN,MAAdC,MAERK,KAAKC,SAAS,CAAEN,KAAM,O,oBAGxB,WACE,IAAQA,EAASK,KAAKN,MAAdC,KAER,OACE,eAACW,EAAA,EAAD,CAAMC,UAAU,SAASC,SAAUR,KAAKF,aAAxC,UACE,cAACQ,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,yBACZJ,UAAU,OACVZ,KAAK,OACLQ,MAAOR,EACPiB,SAAUZ,KAAKJ,eAEjB,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,wB,GApC8BK,IAAMC,W,QCA7B,SAASC,EAAaxB,GACnC,IAAQE,EAAyCF,EAAzCE,KAAMuB,EAAmCzB,EAAnCyB,WAAYC,EAAuB1B,EAAvB0B,mBAC1B,OACE,eAACC,EAAA,EAAUC,KAAX,CAAgBd,UAAU,oDAA1B,UACGZ,EACD,cAACkB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBQ,QAAS,kBAAMH,EAAmBD,IAApE,qBCJS,SAASK,EAAS9B,GAC/B,IAAQ+B,EAA8B/B,EAA9B+B,MAAOL,EAAuB1B,EAAvB0B,mBAEf,OAAIK,EAAMC,OAEN,cAACL,EAAA,EAAD,UACGI,EAAME,KAAI,SAACC,GAAD,OACT,cAACV,EAAD,CACEtB,KAAMgC,EAAGhC,KAETuB,WAAYS,EAAGC,GACfT,mBAAoBA,GAFfQ,EAAGC,SASX,gD,IClBYC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKnC,MAAQ,CACX8B,MAAO,GACPI,GAAI,GAGN,EAAKvB,gBAAkB,EAAKA,gBAAgBR,KAArB,gBACvB,EAAKsB,mBAAqB,EAAKA,mBAAmBtB,KAAxB,gBARd,E,mDAWd,SAAgBiC,GACd9B,KAAKC,UAAS,SAACP,GACb,IAAMqC,EAAWrC,EAAM8B,MAAMQ,QAK7B,OAJAD,EAASE,KAAK,CACZL,GAAIlC,EAAMkC,GACVjC,KAAMmC,IAED,CACLN,MAAOO,EACPH,GAAIlC,EAAMkC,GAAK,Q,gCAKrB,SAAmBM,GACjBlC,KAAKC,UAAS,SAACP,GACb,IAAMqC,EAAWrC,EAAM8B,MAAMQ,QACvBG,EAAQJ,EAASK,WAAU,SAACT,GAAD,OAAQA,EAAGC,KAAOM,KAEnD,OADAH,EAASM,OAAOF,EAAO,GAChB,CAAEX,MAAOO,Q,oBAIpB,WACE,IAAQP,EAAUxB,KAAKN,MAAf8B,MAER,OACE,eAACc,EAAA,EAAD,CAAW/B,UAAU,oBAArB,UACE,cAAC,EAAD,CAAUF,gBAAiBL,KAAKK,kBAChC,oBAAIE,UAAU,SACd,cAACgB,EAAD,CAAUC,MAAOA,EAAOL,mBAAoBnB,KAAKmB,4B,GA1CxBJ,IAAMC,WCAvCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9628451.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { addTodoListItem } = this.props;\n    const { name } = this.state;\n    addTodoListItem(name);\n    this.setState({ name: '' });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <Form className=\"d-flex\" onSubmit={this.handleSubmit}>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"What needs to be done?\"\n          className=\"me-2\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ListGroup } from 'react-bootstrap';\n\nexport default function TodoListItem(props) {\n  const { name, identifier, removeTodoListItem } = props;\n  return (\n    <ListGroup.Item className=\"d-flex align-items-center justify-content-between\">\n      {name}\n      <Button variant=\"outline-success\" onClick={() => removeTodoListItem(identifier)}>\n        Done\n      </Button>\n    </ListGroup.Item>\n  );\n}\n\nTodoListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  identifier: PropTypes.number.isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nimport TodoListItem from '../TodoListItem';\n\nexport default function TodoList(props) {\n  const { todos, removeTodoListItem } = props;\n\n  if (todos.length) {\n    return (\n      <ListGroup>\n        {todos.map((el) => (\n          <TodoListItem\n            name={el.name}\n            key={el.id}\n            identifier={el.id}\n            removeTodoListItem={removeTodoListItem}\n          />\n        ))}\n      </ListGroup>\n    );\n  }\n\n  return <div>Nothing to do</div>;\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      id: 0,\n    };\n\n    this.addTodoListItem = this.addTodoListItem.bind(this);\n    this.removeTodoListItem = this.removeTodoListItem.bind(this);\n  }\n\n  addTodoListItem(recivedName) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      newTodos.push({\n        id: state.id,\n        name: recivedName,\n      });\n      return {\n        todos: newTodos,\n        id: state.id + 1,\n      };\n    });\n  }\n\n  removeTodoListItem(recivedId) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      const index = newTodos.findIndex((el) => el.id === recivedId);\n      newTodos.splice(index, 1);\n      return { todos: newTodos };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <Container className=\"bg-light p-4 my-5\">\n        <TodoForm addTodoListItem={this.addTodoListItem} />\n        <hr className=\"my-3\" />\n        <TodoList todos={todos} removeTodoListItem={this.removeTodoListItem} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}