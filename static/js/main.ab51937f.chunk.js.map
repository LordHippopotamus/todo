{"version":3,"sources":["components/TodoForm/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/App/index.jsx","index.jsx"],"names":["TodoForm","props","state","name","description","color","finish","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","addTodoListItem","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","as","rows","Select","Row","column","lg","Col","Button","variant","React","Component","TodoListItem","identifier","removeTodoListItem","Accordion","Item","eventKey","style","border","Header","Body","onClick","TodoList","todos","length","map","el","id","App","parametrs","newTodos","slice","push","recivedId","index","findIndex","splice","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab51937f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, Button, Row, Col,\n} from 'react-bootstrap';\n\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      color: 'dark',\n      finish: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { addTodoListItem } = this.props;\n    const {\n      name, description, color, finish,\n    } = this.state;\n\n    addTodoListItem({\n      name, description, color, finish,\n    });\n\n    this.setState({\n      name: '',\n      description: '',\n    });\n  }\n\n  render() {\n    const {\n      name, description, color, finish,\n    } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"What needs to be done?\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Optional todo description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Form.Label>Color</Form.Label>\n        <Form.Select className=\"mb-3\" name=\"color\" value={color} onChange={this.handleChange}>\n          <option value=\"dark\">Dark</option>\n          <option value=\"secondary\">Gray</option>\n          <option value=\"primary\">Blue</option>\n          <option value=\"success\">Green</option>\n          <option value=\"danger\">Red</option>\n        </Form.Select>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Row>\n            <Form.Label column lg={1}>Finish in:</Form.Label>\n            <Col>\n              <Form.Control\n                className=\"w-auto\"\n                type=\"time\"\n                name=\"finish\"\n                value={finish}\n                onChange={this.handleChange}\n                required\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Accordion } from 'react-bootstrap';\nimport './TodoListItem.css';\n\nexport default function TodoListItem(props) {\n  const {\n    name,\n    description,\n    color,\n    finish,\n    identifier,\n    removeTodoListItem,\n  } = props;\n\n  return (\n    <Accordion.Item\n      eventKey={identifier}\n      className={`mb-2 accordion-${color}`}\n      style={{ border: `1px solid var(--bs-${color})` }}\n    >\n      <Accordion.Header><span className=\"w-100\">{name}</span></Accordion.Header>\n      <Accordion.Body className=\"d-flex flex-column align-items-start\">\n        <p>{description || 'This todo has not description'}</p>\n        <p>\n          Finish in:\n          {` ${finish}`}\n        </p>\n        <Button variant={`outline-${color}`} onClick={() => removeTodoListItem(identifier)}>\n          Done\n        </Button>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nTodoListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  finish: PropTypes.string.isRequired,\n  identifier: PropTypes.number.isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\nimport TodoListItem from '../TodoListItem';\n\nexport default function TodoList(props) {\n  const { todos, removeTodoListItem } = props;\n\n  if (todos.length) {\n    return (\n      <Accordion>\n        {todos.map((el) => (\n          <TodoListItem\n            name={el.name}\n            description={el.description}\n            color={el.color}\n            finish={el.finish}\n            key={el.id}\n            identifier={el.id}\n            removeTodoListItem={removeTodoListItem}\n          />\n        ))}\n      </Accordion>\n    );\n  }\n\n  return <div>Nothing to do</div>;\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      id: 0,\n    };\n\n    this.addTodoListItem = this.addTodoListItem.bind(this);\n    this.removeTodoListItem = this.removeTodoListItem.bind(this);\n  }\n\n  addTodoListItem(parametrs) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      newTodos.push({\n        id: state.id,\n        name: parametrs.name,\n        description: parametrs.description,\n        color: parametrs.color,\n        finish: parametrs.finish,\n      });\n      return {\n        todos: newTodos,\n        id: state.id + 1,\n      };\n    });\n  }\n\n  removeTodoListItem(recivedId) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      const index = newTodos.findIndex((el) => el.id === recivedId);\n      newTodos.splice(index, 1);\n      return { todos: newTodos };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <Container className=\"bg-light p-4 my-5\">\n        <TodoForm addTodoListItem={this.addTodoListItem} />\n        <hr className=\"my-3\" />\n        <TodoList todos={todos} removeTodoListItem={this.removeTodoListItem} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}