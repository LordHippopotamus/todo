{"version":3,"sources":["components/TodoForm/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/App/index.jsx","index.jsx"],"names":["TodoForm","props","state","name","description","color","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","addTodoListItem","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","as","rows","Button","variant","React","Component","TodoListItem","identifier","removeTodoListItem","Accordion","Item","eventKey","Header","style","backgroundColor","Body","onClick","TodoList","todos","length","map","el","id","App","recivedName","recivedDescription","recivedColor","newTodos","slice","push","recivedId","index","findIndex","splice","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.300a3f75.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      color: '#000',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { addTodoListItem } = this.props;\n    const { name, description, color } = this.state;\n    addTodoListItem(name, description, color);\n    this.setState({\n      name: '',\n      description: '',\n    });\n  }\n\n  render() {\n    const { name, description, color } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"What needs to be done?\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Optional todo description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"color\">\n          <Form.Label>Color</Form.Label>\n          <Form.Control\n            type=\"color\"\n            name=\"color\"\n            value={color}\n            onChange={this.handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Accordion } from 'react-bootstrap';\nimport './TodoListItem.css';\n\nexport default function TodoListItem(props) {\n  const {\n    name,\n    description,\n    color,\n    identifier,\n    removeTodoListItem,\n  } = props;\n  return (\n    <Accordion.Item eventKey={identifier}>\n      <Accordion.Header>\n        <span className=\"w-100\">{name}</span>\n        <div className=\"todo-list-item-color ms-auto me-2\" style={{ backgroundColor: color }} />\n      </Accordion.Header>\n      <Accordion.Body className=\"d-flex flex-column align-items-start\">\n        <p>{description || 'This todo has not description'}</p>\n        <Button variant=\"outline-success\" onClick={() => removeTodoListItem(identifier)}>\n          Done\n        </Button>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nTodoListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  identifier: PropTypes.number.isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\nimport TodoListItem from '../TodoListItem';\n\nexport default function TodoList(props) {\n  const { todos, removeTodoListItem } = props;\n\n  if (todos.length) {\n    return (\n      <Accordion>\n        {todos.map((el) => (\n          <TodoListItem\n            name={el.name}\n            description={el.description}\n            color={el.color}\n            key={el.id}\n            identifier={el.id}\n            removeTodoListItem={removeTodoListItem}\n          />\n        ))}\n      </Accordion>\n    );\n  }\n\n  return <div>Nothing to do</div>;\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n  removeTodoListItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      id: 0,\n    };\n\n    this.addTodoListItem = this.addTodoListItem.bind(this);\n    this.removeTodoListItem = this.removeTodoListItem.bind(this);\n  }\n\n  addTodoListItem(recivedName, recivedDescription, recivedColor) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      newTodos.push({\n        id: state.id,\n        name: recivedName,\n        description: recivedDescription,\n        color: recivedColor,\n      });\n      return {\n        todos: newTodos,\n        id: state.id + 1,\n      };\n    });\n  }\n\n  removeTodoListItem(recivedId) {\n    this.setState((state) => {\n      const newTodos = state.todos.slice();\n      const index = newTodos.findIndex((el) => el.id === recivedId);\n      newTodos.splice(index, 1);\n      return { todos: newTodos };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <Container className=\"bg-light p-4 my-5\">\n        <TodoForm addTodoListItem={this.addTodoListItem} />\n        <hr className=\"my-3\" />\n        <TodoList todos={todos} removeTodoListItem={this.removeTodoListItem} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}